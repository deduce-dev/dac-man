[{"/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/index.js":"1","/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/serviceWorker.js":"2","/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/temp/App.js":"3","/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/common/api.js":"4","/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/components/Layout.jsx":"5","/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/components/FlaggingView.jsx":"6","/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/components/FileUploader.jsx":"7","/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/common/styles.jsx":"8","/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/components/WorkbenchCard.jsx":"9","/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/components/DataReview.jsx":"10","/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/components/CSVVariableSelector.jsx":"11","/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/components/VariableFlaggingDetails.jsx":"12"},{"size":457,"mtime":1606690992987,"results":"13","hashOfConfig":"14"},{"size":4951,"mtime":1605222614677,"results":"15","hashOfConfig":"14"},{"size":1212,"mtime":1608694472301,"results":"16","hashOfConfig":"14"},{"size":10971,"mtime":1606743137488,"results":"17","hashOfConfig":"14"},{"size":953,"mtime":1606692269813,"results":"18","hashOfConfig":"14"},{"size":5050,"mtime":1608665567763,"results":"19","hashOfConfig":"14"},{"size":5317,"mtime":1608742700385,"results":"20","hashOfConfig":"14"},{"size":994,"mtime":1606739827692,"results":"21","hashOfConfig":"14"},{"size":508,"mtime":1606692316188,"results":"22","hashOfConfig":"14"},{"size":659,"mtime":1607089461584,"results":"23","hashOfConfig":"14"},{"size":1984,"mtime":1608332151714,"results":"24","hashOfConfig":"14"},{"size":9572,"mtime":1608653159776,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1mae78p",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/index.js",[],["56","57"],"/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/serviceWorker.js",[],"/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/temp/App.js",["58","59","60","61","62"],"/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/common/api.js",["63","64","65","66","67","68"],"import update from 'immutability-helper';\nimport React, { useReducer } from 'react';\n\n\nfunction getFiles() {\n    const data = [\n        {\n            path: '/foo/bar/baz',\n            key: '/foo/bar/baz',\n            isDir: true\n        },\n        {\n            path: '/foo/bar/baz/base.fits',\n            key: '/foo/bar/baz/base.fits',\n            type: 'fits'\n        },\n        {\n            path: '/foo/bar/baz/base.csv',\n            key: '/foo/bar/baz/base.csv',\n            type: 'csv'\n        },\n        {\n            path: '/foo/bar/baz/base.hdf5',\n            key: '/foo/bar/baz/base.hdf5',\n            type: 'hdf5',\n        },\n    ];\n\n    return data;\n}\n\nfunction getFitsHDUs() {\n    return {\n        A: [\n            {\n                extension: 0,\n                name: 'PRIMARY',\n                hdu_type: 'Image',\n                dimensions: '(4645, 1000)',\n                content_type: 'spectrum'\n            },\n            {\n                extension: 1,\n                name: 'IVAR',\n                hdu_type: 'Image',\n                dimensions: '(4645, 1000)',\n            },\n            {\n                extension: 2,\n                name: 'PLUGMAP',\n                hdu_type: 'BinTable',\n                dimensions: '1000r x 35c',\n            },\n        ],\n        B: [\n            {\n                extension: 0,\n                name: 'PRIMARY',\n                hdu_type: 'Image',\n                dimensions: '(4645, 1000)',\n                content_type: 'spectrum'\n            },\n            {\n                extension: 1,\n                name: 'IVAR',\n                hdu_type: 'Image',\n                dimensions: '(4645, 1000)',\n            },\n        ]\n    }\n}\n\nfunction getComparisonCSV(id) {\n    return {\n        comparisonID: id,\n        type: \"csv\",\n        layers: [\n            {\n                type: \"file\",\n                path: {\n                    A: \"base.csv\",\n                    B: \"new.csv\"\n                },\n            },\n        ]\n    }\n}\n\nfunction getComparisonFITS(id) {\n\n    return {\n        comparisonID: id,\n        type: \"fits\",\n        layers: [\n            {\n                type: \"file\",\n                path: {\n                    A: \"space-data-v33.fits\",\n                    B: \"space-data-v34.fits\"\n                },\n            },\n            {\n                type: \"fits\",\n                contents: getFitsHDUs(),\n            }\n        ]\n    }\n}\n\nfunction getComparisonHDF5(id) {\n    return {\n        comparisonID: id,\n        type: \"hdf5\",\n        layers: [\n            {\n                type: \"file\",\n                path: {\n                    A: \"sample-2019-11-01.h5\",\n                    B: \"sample-2020-05-05.h5\"\n                },\n            },\n        ],\n        results: [\n            {\n                type: \"counts\",\n                data: {\n                    total: 4452,\n                    added: 123,\n                    deleted: 45,\n                    modified: 12,\n                    unchanged: 3523,\n                },\n                // foo: \"bar\"\n            },\n            {\n                type: \"heatmap\",\n                data: {\n                    url: '/base/delta.png'\n                }\n            }\n        ]\n    }\n}\n\nfunction getComparisonGeneric(id, type, names) {\n\n    return {\n        comparisonID: id,\n        type: type,\n        layers: [\n            {\n                type: \"file\",\n                path: {\n                    A: `${names[0]}.${type}`,\n                    B: `${names[1]}.${type}`,\n                },\n            }\n        ]\n    }\n}\n\nfunction getComparisons() {\n    return [\n        getComparisonCSV(1),\n        getComparisonFITS(2),\n        getComparisonHDF5(3),\n        getComparisonGeneric(4, \"txt\", [\"data-v1\", \"data-v2\"])\n    ];\n}\n\n\n// this simulates an actual call to the backend\nexport function getResponse(action, params) {\n  if (action === \"get_content\") {\n    const {resource, value, ...other} = params;\n    let response = {\n      request: {...params}\n    };\n    if (resource === \"dir\") {\n      return {\n        ...response,\n        resource: \"file\",\n        values: [\n          'mercury.fits',\n          'venus.fits',\n          'mars.fits',\n        ]\n      }\n    };\n    if (resource === \"file\") {\n      return {\n        ...response,\n        // TODO this is hard-coded here temporarily\n        // the resource should actually be detected by the plugin\n        resource: \"fits.hdu\",\n        values: [\n            {\n                extension: 0,\n                name: 'PRIMARY',\n                hdu_type: 'Image',\n                dimensions: '(4645, 1000)',\n                content_type: 'spectrum'\n            },\n            {\n                extension: 1,\n                name: 'IVAR',\n                hdu_type: 'Image',\n                dimensions: '(4645, 1000)',\n            },\n            {\n                extension: 2,\n                name: 'PLUGMAP',\n                hdu_type: 'BinTable',\n                dimensions: '1000r x 35c',\n            },\n        ]\n      }\n    }\n  } else if (action === \"get_analysis_params\") {\n\n  } else {};\n\n}\n\nfunction getNextStage(prev = null, formData = {}) {\n  let next = {};\n  console.log('getNextStage.prev:');\n  console.log(prev)\n    if (prev === null) {\n    //   next = {\n    //     action: \"select\",\n    //     resource: \"dir\",\n    //     description: \"Select the dirs to compare\"\n    //   };\n    // }\n    // else if (prev.action === \"select\" && prev.resource === \"dir\") {\n      let src = {\n        A: formData[\"dir.A\"],\n        B: formData[\"dir.B\"]\n      }\n      let resp = {};\n      resp.A = getResponse('get_content', {resource: 'dir', value: src.A});\n      resp.B = getResponse('get_content', {resource: 'dir', value: src.B});\n      next = {\n        action: \"select\",\n        resource: \"file\",\n        description: \"Select the two files to compare\",\n        choices: {\n          A: resp.A.values,\n          B: resp.B.values,\n        },\n        source: {...src},\n        selected: {\n          A: null,\n          B: null\n        },\n        buildParams: [\n          {\n            key: 'file.A',\n            resource: 'file',\n            compareSide: 'A',\n            getChoices: () => getResponse('get_content', {resource: 'dir', value: src.A}),\n            choices: getResponse('get_content', {resource: 'dir', value: src.A}),\n            source: {resource: 'dir', value: src.A},\n            value: '',\n          },\n          {\n            key: 'file.B',\n            resource: 'file',\n            compareSide: 'B',\n            getChoices: () => getResponse('get_content', {resource: 'dir', value: src.B}),\n            choices: getResponse('get_content', {resource: 'dir', value: src.B}),\n            source: {resource: 'dir', value: src.B},\n            value: '',\n          }\n        ]\n      };\n    }\n    else if (prev.action === \"select\" && prev.resource === \"file\") {\n      let src = {\n        A: formData[\"file.A\"],\n        B: formData[\"file.B\"]\n      }\n      let resp = {};\n      resp.A = getResponse('get_content', {resource: 'file', value: src.A});\n      resp.B = getResponse('get_content', {resource: 'file', value: src.B});\n      next = {\n        action: \"select\",\n        resource: \"fits.hdu\",\n        plugin: \"FITSPlugin\",\n        description: \"Select the two HDUs to compare\",\n        choices: {\n          A: resp.A.values,\n          B: resp.B.values,\n        },\n        source: {...src},\n        selected: {\n          A: null,\n          B: null,\n        },\n        buildParams: [\n          {\n            key: 'fits.hdu.A',\n            resource: 'fits.hdu',\n            compareSide: 'A',\n            getChoices: () => getResponse('get_content', {resource: 'file', value: src.A}),\n            choices: getResponse('get_content', {resource: 'file', value: src.A}),\n            source: {resource: 'file', value: src.A},\n            value: '',\n          },\n          {\n            key: 'fits.hdu.B',\n            resource: 'fits.hdu',\n            compareSide: 'B',\n            getChoices: () => getResponse('get_content', {resource: 'file', value: src.B}),\n            choices: getResponse('get_content', {resource: 'file', value: src.B}),\n            source: {resource: 'file', value: src.B},\n            value: '',\n          }\n        ]\n      };\n    }\n    else {\n      next = {\n        action: \"set_parameters\",\n        resource: \"analysis_params\",\n        description: \"Select the analysis parameters\",\n        isLast: true,\n        selected: {\n          normalize: true\n        },\n        buildParams: [\n          {\n            key: 'analysisParams.normalize',\n            type: 'bool',\n            value: true,\n          },\n          {\n            key: 'analysisParams.visualization',\n            type: 'string',\n            choices: ['histogram', 'heatmap'],\n            value: '',\n          }\n        ]\n\n      };\n    };\n\n    return next;\n}\n\n// reducer actions\nexport const ACTIONS = {\n  ADD_BUILD_STAGE: 'ADD_BUILD_STAGE',\n  RESET_BUILD_STAGES: 'RESET_BUILD_STAGES',\n  SET_FORM_DATA: 'SET_FORM_DATA',\n  SUBMIT_FORM_DATA: 'SUBMIT_FORM_DATA',\n  SET_BUILD_PARAM_VALUE: 'SET_BUILD_PARAM_VALUE',\n  SET_BUILD_PARAM: 'SET_BUILD_PARAM',\n};\n\nfunction buildComparisonReducer(state, action) {\n\n  console.log('inside buildComparisonReducer');\n  switch (action.type) {\n    case 'setFormData':\n      return {\n        ...state,\n        formData: {\n          ...state.formData,\n          [action.name]: action.value\n        }\n      };\n    case 'resetStages':\n      console.log('dispatching resetStages');\n      return initBuildState(state.onFormDataComplete);\n    case 'addStage':\n      const stages = state.stages;\n      // const toCheck = stages.slice(-1)[0];\n      const toCheck = action.currentStage;\n      const toBeAdded = getNextStage(toCheck, state.formData);\n      console.log('[reducer]addStage.stages:'); console.log(stages);\n      console.log('[reducer]addStage.toCheck:'); console.log(toCheck);\n      return {\n        ...state,\n        stages: [\n          ...stages, toBeAdded\n        ]\n      };\n    case 'sendFormData':\n      // not sure if calling this function here is a violation of the reducer principles\n      // in any case it's only here temporarily, since the reducer itself should be lifted up into the parent component\n      state.onFormDataComplete(state.formData);\n      return initBuildState(state.onFormDataComplete);\n    case ACTIONS.SET_BUILD_PARAM_VALUE:\n      const key = action.payload.key;\n      const param = state.buildParamsByKey[key];\n      return {\n        ...state,\n        buildParamsByKey: {\n          ...state.buildParamsByKey,\n          [key]: {\n            ...param,\n            value: action.payload.value\n          }\n        }\n      };\n  default:\n    return state;\n  };\n}\n\nfunction initBuildState(onFormDataComplete) {\n  return {\n    stages: [getNextStage()],\n    formData: {\n      \"dir.A\": \"/data/solar-system-v1/\",\n      \"dir.B\": \"/data/solar-system-v2/\",\n    },\n    onFormDataComplete: onFormDataComplete,\n  };\n}\n\nexport {\n    getComparisons\n};\n","/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/components/Layout.jsx",[],"/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/components/FlaggingView.jsx",["69","70","71","72","73","74","75","76","77","78","79"],"import React, { useReducer } from \"react\";\nimport { MainLayout } from './Layout'\nimport { WorkbenchCard } from './WorkbenchCard';\nimport { FileUploader } from './FileUploader';\nimport { DataReview } from './DataReview';\nimport { Typography, Container, Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\n\nimport { CSVVariableSelector } from './CSVVariableSelector';\nimport { VariableFlaggingDetails } from './VariableFlaggingDetails';\n\nimport { useStyles } from '../common/styles';\n\nfunction createData(datetime, WindDir, Windspeed_ms, temp_f, dewp_f) {\n  return { datetime, WindDir, Windspeed_ms, temp_f, dewp_f };\n}\n\nconst initialState = {\n  showCSVVariableSelector: false,\n  dataReview: {\n    show: false,\n    columns: [],\n    rows: [],\n    datasetVars:[]\n  },\n  selectedVarsDetails: {\n    show: true,\n    atVar: -1,\n    varDetailsFinished: false,\n    varNames: [],\n    showVarCard: [],\n    flaggingDetails: []\n  },\n  resultsReview: {\n    show: false,\n    columns: [],\n    rows: []\n  }\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'UPLOAD_FILE':\n      return {\n        ...state,\n        dataReview: action.payload\n      };\n    case 'CHOOSE_VARS_TO_FLAG':\n      return {\n        ...state,\n        showCSVVariableSelector: true\n      };\n    case 'ADD_VARS_TO_FLAG':\n      console.log({\n        ...state,\n        selectedVarsDetails: {\n          ...state.selectedVarsDetails,\n          atVar: 0,\n          varNames: action.payload.varNames,\n          showVarCard: action.payload.showVarCard\n        }});\n      return {\n        ...state,\n        selectedVarsDetails: {\n          ...state.selectedVarsDetails,\n          atVar: 0,\n          varNames: action.payload.varNames,\n          showVarCard: action.payload.showVarCard\n        }\n      };\n    case 'MOVE_TO_NEXT_VAR':\n      let atVar = state.selectedVarsDetails.atVar + 1;\n      let showVarCard = state.selectedVarsDetails.showVarCard;\n\n      let varDetailsFinished = false;\n      if (atVar >= showVarCard.length) {\n        varDetailsFinished = true;\n      }\n      \n      showVarCard[atVar] = true;\n\n      console.log({\n        ...state,\n        selectedVarsDetails: {\n          ...state.selectedVarsDetails,\n          atVar: atVar,\n          varDetailsFinished: varDetailsFinished,\n          showVarCard: showVarCard,\n          flaggingDetails: action.payload.flaggingDetails\n        }\n      });\n      return {\n        ...state,\n        selectedVarsDetails: {\n          ...state.selectedVarsDetails,\n          atVar: atVar,\n          varDetailsFinished: varDetailsFinished,\n          showVarCard: showVarCard,\n          flaggingDetails: action.payload.flaggingDetails\n        }\n      };\n    case 'RUN_FLAGGING':\n      //let temp = ;\n      return {\n        ...state,\n        selectedVarsDetails: {\n          ...state.selectedVarsDetails,\n          show: false,\n        },\n        resultsReview: {\n          ...state.resultsReview\n        }\n      };\n    default:\n      return state;\n  }\n}\n\nfunction FlaggingView() {\n  const classes = useStyles();\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <MainLayout>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <FileUploader dispatch={dispatch} />\n            { state.dataReview.show && (\n              <DataReview\n                index={2}\n                rows={state.dataReview.rows}\n                columns={state.dataReview.columns} \n                dispatch={dispatch} />\n            )}\n            { state.showCSVVariableSelector && (\n              <CSVVariableSelector\n                variables={state.dataReview.datasetVars} \n                dispatch={dispatch} />\n            )}\n            { state.selectedVarsDetails.show && state.selectedVarsDetails.varNames.map( (variable, i) => (\n                state.selectedVarsDetails.showVarCard[i] && (\n                  <VariableFlaggingDetails\n                    index={i}\n                    variable={variable}\n                    parentDispatch={dispatch}\n                    isFinalVar={state.selectedVarsDetails.varDetailsFinished} />\n                )\n              ))\n            }\n            {/*\n            { state.selectedVarsDetails.varDetailsFinished && (\n                <FlaggingFinalReview\n                  variables={state.selectedVarsDetails.varNames}\n                  flaggingDetails={state.selectedVarsDetails.flaggingDetails} />\n            )}\n            */}\n          </Grid>\n        </Container>\n      </main>\n    </MainLayout>\n  );\n}\n\nexport {\n  FlaggingView\n}\n","/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/components/FileUploader.jsx",["80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97"],"/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/common/styles.jsx",[],"/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/components/WorkbenchCard.jsx",["98"],"import React from \"react\";\nimport { Paper, Grid, Card } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { useStyles } from '../common/styles';\n\n\nfunction WorkbenchCard({ children, title }) {\n  const classes = useStyles(); \n  return (\n    <Grid item xs={12}>\n      <Paper elevation={5} className={classes.paper}>\n        <Typography variant=\"h6\">\n          {title}\n        </Typography>\n        {children}\n      </Paper>\n    </Grid>\n  );\n}\n\nexport {\n  WorkbenchCard\n}\n","/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/components/DataReview.jsx",[],"/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/components/CSVVariableSelector.jsx",["99"],"import React, { useReducer } from \"react\";\nimport MaterialTable from 'material-table';\n\nimport { WorkbenchCard } from './WorkbenchCard';\nimport Button from \"@material-ui/core/Button\";\n\n\nfunction CSVVariableSelector({ variables, dispatch }) {\n  let columnDefs = [\n    { title: 'Variables', field: 'variable_name' },\n    { title: 'Dimensions', field: 'dimensions' },\n    { title: 'Content Type', field: 'content_type' }\n  ];\n\n  let values= [\n    {\n        variable_name: 'datetime',\n        dimensions: '(1, 105192)',\n        content_type: 'String'\n    },\n    {\n        variable_name: 'WindDir',\n        dimensions: '(1, 105192)',\n        content_type: 'Integer'\n    },\n    {\n        variable_name: 'Windspeed_ms',\n        dimensions: '(1, 105192)',\n        content_type: 'Float'\n    },\n    {\n        variable_name: 'TEMP_F',\n        dimensions: '(1, 105192)',\n        content_type: 'Integer'\n    },\n    {\n        variable_name: 'DEWP_F',\n        dimensions: '(1, 105192)',\n        content_type: 'Integer'\n    },\n  ]\n  //onSelectionChange={(rows) => dispatch(handleChange(rows))}\n\n  let varNames = []\n\n  function addVariables(varNames) {\n    let showVars = new Array(varNames.length).fill(false);\n    if (showVars.length > 0) showVars[0] = true;\n    console.log(varNames);\n    console.log(showVars);\n    return {\n      type: 'ADD_VARS_TO_FLAG',\n      payload: {\n        varNames: varNames,\n        showVarCard: showVars\n      }\n    };\n  }\n\n  return (\n    <WorkbenchCard\n      key=\"card-2\"\n    >\n      <MaterialTable\n        title=\"Choose Variables to flag\"\n        columns={columnDefs}\n        data={values}\n        options={{\n          selection: true\n        }}\n        onSelectionChange={(rows) => varNames = rows.map((row) => (row.variable_name))}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => { dispatch(addVariables(varNames)) }}\n      >\n        Next\n      </Button>\n    </WorkbenchCard>\n  )\n}\n\nexport {\n  CSVVariableSelector\n}\n","/Users/absho/workspace/lbnl/deduce/boris/ui/dac-man/dacman/ui/fits/src/components/VariableFlaggingDetails.jsx",["100","101"],"import React, { useReducer } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { WorkbenchCard } from './WorkbenchCard';\nimport { useStyles } from '../common/styles';\n\nconst initialState = {\n  checkNull: true,\n  checkDuplicates: {\n    checked: true,\n    checkSubsequent: false,\n    subsequentNum: 3\n  },\n  checkBadVals: {\n    checked: false,\n    range: {\n      low: '',\n      high: ''\n    }\n  },\n  checkOutlierVals: {\n    checked: false,\n    iqrCoef: 1.5\n  },\n  checkExtremeVals: {\n    checked: false,\n    iqrCoef: 3\n  }\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CHECKBOX_CHANGE':\n      return {\n        ...state,\n        [action.payload.name]: action.payload.checked\n      };\n    case 'DUPLICATES_CHECKBOX_CHANGE':\n      return {\n        ...state,\n        checkDuplicates: {\n          ...state.checkDuplicates,\n          checked: action.payload\n        }\n      };\n    case 'SUBSEQUENT_CHECKBOX_CHANGE':\n      return {\n        ...state,\n        checkDuplicates: {\n          ...state.checkDuplicates,\n          checkSubsequent: action.payload\n        }\n      };\n    case 'SUBSEQUENT_NUM_CHANGE':\n      return {\n        ...state,\n        checkDuplicates: {\n          ...state.checkDuplicates,\n          subsequentNum: action.payload\n        }\n      };\n    case 'BAD_VALS_CHECKBOX_CHANGE':\n      return {\n        ...state,\n        checkBadVals: {\n          ...state.checkBadVals,\n          checked: action.payload\n        }\n      };\n    case 'BAD_VALS_FROM_INPUT_CHANGE':\n      return {\n        ...state,\n        checkBadVals: {\n          ...state.checkBadVals,\n          range: {\n            ...state.checkBadVals.range,\n            low: action.payload\n          }\n        }\n      };\n    case 'BAD_VALS_TO_INPUT_CHANGE':\n      return {\n        ...state,\n        checkBadVals: {\n          ...state.checkBadVals,\n          range: {\n            ...state.checkBadVals.range,\n            high: action.payload\n          }\n        }\n      };\n    case 'OUTLIER_CHECKBOX_CHANGE':\n      return {\n        ...state,\n        checkOutlierVals: {\n          ...state.checkOutlierVals,\n          checked: action.payload\n        }\n      };\n    case 'OUTLIER_IQR_VAL_CHANGE':\n      return {\n        ...state,\n        checkOutlierVals: {\n          ...state.checkOutlierVals,\n          iqrCoef: action.payload\n        }\n      };\n    case 'EXTREME_CHECKBOX_CHANGE':\n      return {\n        ...state,\n        checkExtremeVals: {\n          ...state.checkExtremeVals,\n          checked: action.payload\n        }\n      };\n    case 'EXTREME_IQR_VAL_CHANGE':\n      return {\n        ...state,\n        checkExtremeVals: {\n          ...state.checkExtremeVals,\n          iqrCoef: action.payload\n        }\n      };\n    default:\n      return state;\n  }\n}\n\nfunction VariableFlaggingDetails({ index, variable, isFinalVar, parentDispatch }) {\n  const classes = useStyles();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const basicCheckboxChange = (event) => {\n    dispatch({\n      type: 'CHECKBOX_CHANGE',\n      payload: {\n        name: event.target.name,\n        checked: event.target.checked\n      }\n    });\n  };\n\n  const duplicatesCheckboxChange = (event) => {\n    dispatch({\n      type: 'DUPLICATES_CHECKBOX_CHANGE',\n      payload: event.target.checked\n    });\n  };\n\n  const subsequentCheckboxChange = (event) => {\n    dispatch({\n      type: 'SUBSEQUENT_CHECKBOX_CHANGE',\n      payload: event.target.checked\n    });\n  };\n\n  const subsequentNumChange = (event) => {\n    dispatch({\n      type: 'SUBSEQUENT_NUM_CHANGE',\n      payload: event.target.value\n    });\n  };\n\n  const badValsCheckboxChange = (event) => {\n    dispatch({\n      type: 'BAD_VALS_CHECKBOX_CHANGE',\n      payload: event.target.checked\n    });\n  };\n\n  const badValsFromInputChange = (event) => {\n    dispatch({\n      type: 'BAD_VALS_FROM_INPUT_CHANGE',\n      payload: event.target.value\n    });\n  };\n\n  const badValsToInputChange = (event) => {\n    dispatch({\n      type: 'BAD_VALS_TO_INPUT_CHANGE',\n      payload: event.target.value\n    });\n  };\n\n  const outlierCheckboxChange = (event) => {\n    dispatch({\n      type: 'OUTLIER_CHECKBOX_CHANGE',\n      payload: event.target.checked\n    });\n  };\n\n  const outlierIqrValChange = (event) => {\n    dispatch({\n      type: 'OUTLIER_IQR_VAL_CHANGE',\n      payload: event.target.value\n    });\n  };\n\n  const extremeCheckboxChange = (event) => {\n    dispatch({\n      type: 'EXTREME_CHECKBOX_CHANGE',\n      payload: event.target.checked\n    });\n  };\n\n  const extremeIqrValChange = (event) => {\n    dispatch({\n      type: 'EXTREME_IQR_VAL_CHANGE',\n      payload: event.target.value\n    });\n  };\n\n  const moveToNextVar = () => {\n    parentDispatch({\n      type: \"MOVE_TO_NEXT_VAR\",\n      payload: {\n        variable: variable,\n        flaggingDetails: state\n      }\n    });\n  };\n\n  const runFlagging = () => {\n    parentDispatch({\n      type: \"RUN_FLAGGING\",\n      payload: {\n        variable: variable,\n        flaggingDetails: state\n      }\n    });\n  };\n\n  return (\n    <WorkbenchCard\n      key={`card-${variable}`}\n      title={variable}\n    >\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={state.checkNull} onChange={basicCheckboxChange} name=\"checkNull\" />}\n            label=\"Check Null values\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={state.checkDuplicates.checked} onChange={duplicatesCheckboxChange} name=\"checkDuplicates\" />}\n            label=\"Check Duplicate values\"\n          />\n          <FormGroup row className={classes.paddedFormControl}>\n            <FormControlLabel\n              control={<Checkbox checked={state.checkDuplicates.checkSubsequent} onChange={subsequentCheckboxChange} name=\"checkSubsequent\" />}\n              label=\"Find subsequent Duplicates\"\n            />\n            <FormControl>\n              <TextField\n                id=\"subsequent_duplicates_n\"\n                value={state.checkDuplicates.subsequentNum}\n                onChange={subsequentNumChange}\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\">n =</InputAdornment>,\n                }}\n              />\n            </FormControl>\n          </FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={state.checkBadVals.checked} onChange={badValsCheckboxChange} name=\"checkBadVals\" />}\n            label=\"Check Bad values\"\n          />\n          <FormGroup row className={classes.paddedFormControl}>\n            <FormControl>\n              <TextField\n                id=\"bad_vals_range_from\"\n                value={state.checkBadVals.range.low}\n                onChange={badValsFromInputChange}\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\">Range from</InputAdornment>,\n                }}\n              />\n              <TextField\n                id=\"bad_vals_range_to\"\n                value={state.checkBadVals.range.high}\n                onChange={badValsToInputChange}\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\">To</InputAdornment>,\n                }}\n              />\n            </FormControl>\n          </FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={state.checkOutlierVals.checked} onChange={outlierCheckboxChange} name=\"checkOutlierVals\" />}\n            label=\"Check Outlier values\"\n          />\n          <FormGroup row className={classes.paddedFormControl}>\n            <FormControl>\n              <TextField\n                id=\"outlier_iqr_coef\"\n                value={state.checkOutlierVals.iqrCoef}\n                onChange={outlierIqrValChange}\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\">IQR Coefficient =</InputAdornment>,\n                }}\n              />\n            </FormControl>\n          </FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={state.checkExtremeVals.checked} onChange={extremeCheckboxChange} name=\"checkExtremeVals\" />}\n            label=\"Check Extreme values\"\n          />\n          <FormGroup row className={classes.paddedFormControl}>\n            <FormControl>\n              <TextField\n                id=\"extreme_iqr_coef\"\n                value={state.checkExtremeVals.iqrCoef}\n                onChange={extremeIqrValChange}\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\">IQR Coefficient =</InputAdornment>,\n                }}\n              />\n            </FormControl>\n          </FormGroup>\n        </FormGroup>\n      </FormControl>\n      { isFinalVar ? (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={runFlagging}\n          >\n            Run\n          </Button>\n        ) : (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={moveToNextVar}\n        >\n          Next\n        </Button>\n      )\n      }\n    </WorkbenchCard>\n  )\n}\n\nexport {\n  VariableFlaggingDetails\n}\n",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":27},{"ruleId":"106","severity":1,"message":"110","line":8,"column":8,"nodeType":"108","messageId":"109","endLine":8,"endColumn":12},{"ruleId":"106","severity":1,"message":"111","line":9,"column":8,"nodeType":"108","messageId":"109","endLine":9,"endColumn":18},{"ruleId":"106","severity":1,"message":"112","line":14,"column":10,"nodeType":"108","messageId":"109","endLine":14,"endColumn":20},{"ruleId":"106","severity":1,"message":"113","line":15,"column":10,"nodeType":"108","messageId":"109","endLine":15,"endColumn":22},{"ruleId":"106","severity":1,"message":"114","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":14},{"ruleId":"106","severity":1,"message":"115","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":13},{"ruleId":"106","severity":1,"message":"107","line":2,"column":17,"nodeType":"108","messageId":"109","endLine":2,"endColumn":27},{"ruleId":"106","severity":1,"message":"116","line":5,"column":10,"nodeType":"108","messageId":"109","endLine":5,"endColumn":18},{"ruleId":"106","severity":1,"message":"117","line":175,"column":32,"nodeType":"108","messageId":"109","endLine":175,"endColumn":37},{"ruleId":"106","severity":1,"message":"118","line":362,"column":10,"nodeType":"108","messageId":"109","endLine":362,"endColumn":32},{"ruleId":"106","severity":1,"message":"119","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":23},{"ruleId":"106","severity":1,"message":"120","line":6,"column":10,"nodeType":"108","messageId":"109","endLine":6,"endColumn":20},{"ruleId":"106","severity":1,"message":"121","line":7,"column":8,"nodeType":"108","messageId":"109","endLine":7,"endColumn":14},{"ruleId":"106","severity":1,"message":"122","line":8,"column":8,"nodeType":"108","messageId":"109","endLine":8,"endColumn":17},{"ruleId":"106","severity":1,"message":"123","line":9,"column":8,"nodeType":"108","messageId":"109","endLine":9,"endColumn":13},{"ruleId":"106","severity":1,"message":"124","line":10,"column":8,"nodeType":"108","messageId":"109","endLine":10,"endColumn":17},{"ruleId":"106","severity":1,"message":"125","line":11,"column":8,"nodeType":"108","messageId":"109","endLine":11,"endColumn":17},{"ruleId":"106","severity":1,"message":"126","line":12,"column":8,"nodeType":"108","messageId":"109","endLine":12,"endColumn":17},{"ruleId":"106","severity":1,"message":"127","line":13,"column":8,"nodeType":"108","messageId":"109","endLine":13,"endColumn":16},{"ruleId":"106","severity":1,"message":"128","line":14,"column":8,"nodeType":"108","messageId":"109","endLine":14,"endColumn":23},{"ruleId":"106","severity":1,"message":"129","line":21,"column":10,"nodeType":"108","messageId":"109","endLine":21,"endColumn":20},{"ruleId":"106","severity":1,"message":"130","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":28},{"ruleId":"106","severity":1,"message":"120","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":20},{"ruleId":"106","severity":1,"message":"131","line":2,"column":22,"nodeType":"108","messageId":"109","endLine":2,"endColumn":31},{"ruleId":"106","severity":1,"message":"132","line":2,"column":33,"nodeType":"108","messageId":"109","endLine":2,"endColumn":37},{"ruleId":"106","severity":1,"message":"121","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":14},{"ruleId":"106","severity":1,"message":"133","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":12},{"ruleId":"106","severity":1,"message":"122","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":17},{"ruleId":"106","severity":1,"message":"123","line":6,"column":8,"nodeType":"108","messageId":"109","endLine":6,"endColumn":13},{"ruleId":"106","severity":1,"message":"124","line":7,"column":8,"nodeType":"108","messageId":"109","endLine":7,"endColumn":17},{"ruleId":"106","severity":1,"message":"125","line":8,"column":8,"nodeType":"108","messageId":"109","endLine":8,"endColumn":17},{"ruleId":"106","severity":1,"message":"126","line":9,"column":8,"nodeType":"108","messageId":"109","endLine":9,"endColumn":17},{"ruleId":"106","severity":1,"message":"127","line":10,"column":8,"nodeType":"108","messageId":"109","endLine":10,"endColumn":16},{"ruleId":"106","severity":1,"message":"128","line":11,"column":8,"nodeType":"108","messageId":"109","endLine":11,"endColumn":23},{"ruleId":"106","severity":1,"message":"134","line":15,"column":10,"nodeType":"108","messageId":"109","endLine":15,"endColumn":29},{"ruleId":"106","severity":1,"message":"135","line":16,"column":10,"nodeType":"108","messageId":"109","endLine":16,"endColumn":33},{"ruleId":"106","severity":1,"message":"136","line":54,"column":9,"nodeType":"108","messageId":"109","endLine":54,"endColumn":16},{"ruleId":"106","severity":1,"message":"129","line":56,"column":12,"nodeType":"108","messageId":"109","endLine":56,"endColumn":22},{"ruleId":"106","severity":1,"message":"137","line":133,"column":5,"nodeType":"108","messageId":"109","endLine":133,"endColumn":19},{"ruleId":"106","severity":1,"message":"133","line":2,"column":23,"nodeType":"108","messageId":"109","endLine":2,"endColumn":27},{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":27},{"ruleId":"106","severity":1,"message":"120","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":20},{"ruleId":"106","severity":1,"message":"138","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":13},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'deducelogo' is defined but never used.","'MainLayout' is defined but never used.","'FileUploader' is defined but never used.","'update' is defined but never used.","'React' is defined but never used.","'getFiles' is defined but never used.","'other' is assigned a value but never used.","'buildComparisonReducer' is defined but never used.","'WorkbenchCard' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'CloudUploadIcon' is defined but never used.","'createData' is defined but never used.","'useCallback' is defined but never used.","'Container' is defined but never used.","'Grid' is defined but never used.","'Card' is defined but never used.","'CSVVariableSelector' is defined but never used.","'VariableFlaggingDetails' is defined but never used.","'classes' is assigned a value but never used.","'fileRejections' is assigned a value but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]