[{"/app/fits/src/index.js":"1","/app/fits/src/serviceWorker.js":"2","/app/fits/src/App.js":"3","/app/fits/src/components/FlaggingView.jsx":"4","/app/fits/src/components/DatadiffView.jsx":"5","/app/fits/src/components/Layout.jsx":"6","/app/fits/src/components/WorkbenchCard.jsx":"7","/app/fits/src/components/CSVVariableSelector.jsx":"8","/app/fits/src/components/FileUploader.jsx":"9","/app/fits/src/components/DataReview.jsx":"10","/app/fits/src/components/VariableFlaggingDetails.jsx":"11","/app/fits/src/components/Builder.jsx":"12","/app/fits/src/components/Workbench.jsx":"13","/app/fits/src/components/Sidebar.jsx":"14","/app/fits/src/common/styles.jsx":"15","/app/fits/src/data.js":"16","/app/fits/src/components/PrettyPrinter.jsx":"17","/app/fits/src/components/selectors/File.jsx":"18","/app/fits/src/components/selectors/HDF5.jsx":"19","/app/fits/src/components/selectors/Base.jsx":"20","/app/fits/src/components/ProcessingCue.jsx":"21"},{"size":452,"mtime":1612465975525,"results":"22","hashOfConfig":"23"},{"size":4951,"mtime":1612465975525,"results":"24","hashOfConfig":"23"},{"size":1091,"mtime":1612465975520,"results":"25","hashOfConfig":"23"},{"size":9426,"mtime":1613588865769,"results":"26","hashOfConfig":"23"},{"size":707,"mtime":1612465975521,"results":"27","hashOfConfig":"23"},{"size":953,"mtime":1612465975522,"results":"28","hashOfConfig":"23"},{"size":906,"mtime":1613530634471,"results":"29","hashOfConfig":"23"},{"size":1987,"mtime":1612465975521,"results":"30","hashOfConfig":"23"},{"size":8162,"mtime":1613519791569,"results":"31","hashOfConfig":"23"},{"size":962,"mtime":1613002517437,"results":"32","hashOfConfig":"23"},{"size":13618,"mtime":1612465975523,"results":"33","hashOfConfig":"23"},{"size":2149,"mtime":1612465975521,"results":"34","hashOfConfig":"23"},{"size":994,"mtime":1612465975523,"results":"35","hashOfConfig":"23"},{"size":2205,"mtime":1612465975522,"results":"36","hashOfConfig":"23"},{"size":1251,"mtime":1612562844298,"results":"37","hashOfConfig":"23"},{"size":791,"mtime":1612465975524,"results":"38","hashOfConfig":"23"},{"size":260,"mtime":1612465975522,"results":"39","hashOfConfig":"23"},{"size":1223,"mtime":1612465975524,"results":"40","hashOfConfig":"23"},{"size":3420,"mtime":1612465975524,"results":"41","hashOfConfig":"23"},{"size":1207,"mtime":1612465975523,"results":"42","hashOfConfig":"23"},{"size":1559,"mtime":1613583294931,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1epuu4j",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},"/app/fits/src/index.js",[],["94","95"],"/app/fits/src/serviceWorker.js",[],"/app/fits/src/App.js",["96"],"import React, { useReducer } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport './App.css';\n\nimport { FlaggingView } from './components/FlaggingView';\nimport { DatadiffView } from \"./components/DatadiffView\";\n\n\n// WHY this intermediate component seems to be necessary to avoid the \"invalid hook call\" error\n// my guess is that it could be related to the fact that we're calling it through the react-router `render` prop\nfunction ShowFlagWorkbench() {\n  return (\n    <FlaggingView />\n  );\n}\n\nfunction ShowDatadiffWorkbench() {\n  return (\n    <DatadiffView />\n  );\n}\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            {/* <Route Route exact path=\"/\" render={(routeProps) => ShowWorkbench()} /> */}\n            <Route path=\"/flag\" render={(routeProps) => ShowFlagWorkbench()} />\n            <Route path=\"/datadiff\" render={(routeProps) => ShowDatadiffWorkbench()} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","/app/fits/src/components/FlaggingView.jsx",["97","98","99","100","101","102","103","104","105","106","107"],"import React, { useReducer } from \"react\";\nimport { MainLayout } from './Layout'\nimport { WorkbenchCard } from './WorkbenchCard';\nimport { FileUploader } from './FileUploader';\nimport { DataReview } from './DataReview';\nimport { Typography, Container, Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\n\nimport { CSVVariableSelector } from './CSVVariableSelector';\nimport { VariableFlaggingDetails } from './VariableFlaggingDetails';\nimport { ProcessingCue } from './ProcessingCue';\n\nimport { useStyles } from '../common/styles';\n\nimport axios from 'axios';\n\n\nfunction createData(datetime, WindDir, Windspeed_ms, temp_f, dewp_f) {\n  return { datetime, WindDir, Windspeed_ms, temp_f, dewp_f };\n}\n\nconst initialState = {\n  project_id: null,\n  showFileUploader: true,\n  showCSVVariableSelector: false,\n  showProcessingCue: false,\n  files_to_upload: [],\n  dataReview: {\n    show: false,\n    dataset_name: null,\n    dataset_shape: [],\n    columns: [],\n    rows: [],\n    datasetVars: [],\n    datasetVarsTemplate: []\n  },\n  selectedVarsDetails: {\n    show: true,\n    atVar: -1,\n    varDetailsFinished: false,\n    varNames: [],\n    showVarCard: [],\n    flaggingDetails: []\n  },\n  resultsReview: {\n    show: false,\n    columns: [],\n    rows: [],\n    zip_filename: null,\n    downloadClicked: false\n  }\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CHOSE_FILES_TO_UPLOAD':\n      return {\n        ...state,\n        files_to_upload: action.payload\n      };\n    case 'LOAD_SAMPLE':\n      return {\n        ...state,\n        project_id: action.payload.project_id,\n        dataReview: action.payload.data,\n        selectedVarsDetails: {\n          ...initialState.selectedVarsDetails\n        },\n        resultsReview: {\n          ...initialState.resultsReview\n        }\n      };\n    case 'CHOOSE_VARS_TO_FLAG':\n      return {\n        ...state,\n        showCSVVariableSelector: true\n      };\n    case 'ADD_VARS_TO_FLAG':\n      return {\n        ...state,\n        selectedVarsDetails: {\n          ...state.selectedVarsDetails,\n          atVar: 0,\n          varNames: action.payload.varNames,\n          showVarCard: action.payload.showVarCard\n        }\n      };\n    case 'MOVE_TO_NEXT_VAR':\n      let atVar = state.selectedVarsDetails.atVar + 1;\n      let showVarCard = state.selectedVarsDetails.showVarCard;\n\n      let varDetailsFinished = false;\n      if (atVar >= showVarCard.length - 1) {\n        varDetailsFinished = true;\n      }\n      \n      showVarCard[atVar] = true;\n\n      return {\n        ...state,\n        selectedVarsDetails: {\n          ...state.selectedVarsDetails,\n          atVar: atVar,\n          varDetailsFinished: varDetailsFinished,\n          showVarCard: showVarCard,\n          flaggingDetails: [\n            ...state.selectedVarsDetails.flaggingDetails,\n            action.payload.flaggingDetails\n          ]\n        }\n      };\n    case 'SENT_REQUEST':\n      return {\n        ...state,\n        showProcessingCue: true,\n        showFileUploader: false,\n        showCSVVariableSelector: false,\n        dataReview: {\n          ...state.dataReview,\n          show: false\n        },\n        selectedVarsDetails: {\n          ...state.selectedVarsDetails,\n          show: false\n        },\n        resultsReview: {\n          ...state.resultsReview,\n          show: false\n        }\n      };\n    case 'RUN_FLAGGING':\n      return {\n        ...state,\n        showProcessingCue: false,\n        showFileUploader: false,\n        showCSVVariableSelector: false,\n        dataReview: {\n          ...state.dataReview,\n          show: false\n        },\n        selectedVarsDetails: {\n          ...state.selectedVarsDetails,\n          show: false\n        },\n        resultsReview: {\n          ...state.resultsReview,\n          show: true,\n          columns: action.payload.response.data.columns,\n          rows: action.payload.response.data.rows,\n          zip_filename: action.payload.response.zip_filename\n        }\n      };\n    case 'DOWNLOAD_RESULTS':\n      return {\n        ...state,\n        showFileUploader: true,\n        files_to_upload: [],\n        resultsReview: {\n          ...state.resultsReview,\n          show: false,\n          downloadClicked: true\n        }\n      };\n    default:\n      return state;\n  }\n}\n\nfunction FlaggingView() {\n  const classes = useStyles();\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  if (state.resultsReview.downloadClicked && state.project_id != null) {\n    axios({\n      url: '/flagging/download/' + state.project_id,\n      method: 'POST',\n      responseType: 'blob', // important\n    })\n    .then((response) => {\n      //const downloadUrl = window.URL.createObjectURL(new Blob([response.data] , { type: 'application/gzip' }));\n      const downloadUrl = window.URL.createObjectURL(new Blob([response.data] , { type: 'application/zip' }));\n      const link = document.createElement('a');\n\n      link.href = downloadUrl;\n      //link.setAttribute('download', 'flagged_variables.csv.gz'); //any other extension\n      if (state.resultsReview.zip_filename != null) {\n        link.setAttribute('download', state.resultsReview.zip_filename); //any other extension\n      } else {\n        link.setAttribute('download', 'flagged_variables.zip'); //any other extension\n      }\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n\n      /*\n      axios.post('/flagging/clean/' + state.project_id)\n      .then((response) => {\n        console.log(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });*/\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  }\n\n  return (\n    <MainLayout>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            { state.showProcessingCue && (\n              <ProcessingCue\n                title=\"QA/QC - Flagging\"\n                file_list={state.files_to_upload} />\n            )}\n            { state.showFileUploader && (\n              <FileUploader\n                parentDispatch={dispatch}\n                file_list={state.files_to_upload} />\n            )}\n            { state.dataReview.show && (\n              <DataReview\n                index={2}\n                title={'Data Preview'}\n                dataset_name={state.dataReview.dataset_name}\n                dataset_shape={state.dataReview.dataset_shape}\n                rows={state.dataReview.rows}\n                columns={state.dataReview.columns}\n                buttonText={'Next'}\n                actionType={'CHOOSE_VARS_TO_FLAG'}\n                dispatch={dispatch} />\n            )}\n            { state.showCSVVariableSelector && (\n              <CSVVariableSelector\n                columns={state.dataReview.datasetVarsTemplate}\n                data={state.dataReview.datasetVars} \n                dispatch={dispatch} />\n            )}\n            { state.selectedVarsDetails.show && state.selectedVarsDetails.varNames.map( (variable, i) => (\n                state.selectedVarsDetails.showVarCard[i] && (\n                  i >= state.selectedVarsDetails.varNames.length-1 ? (\n                    <VariableFlaggingDetails\n                      index={i}\n                      project_id={state.project_id}\n                      variable={variable}\n                      isFinalVar={true}\n                      varNames={state.selectedVarsDetails.varNames}\n                      flaggingDetails={state.selectedVarsDetails.flaggingDetails}\n                      dataset_name={state.dataReview.dataset_name}\n                      parentDispatch={dispatch} />\n                  ) : (\n                    <VariableFlaggingDetails\n                      index={i}\n                      project_id={state.project_id}\n                      variable={variable}\n                      isFinalVar={false}\n                      varNames={null}\n                      flaggingDetails={null}\n                      dataset_name={null}\n                      parentDispatch={dispatch} />\n                  )\n                )\n              ))\n            }\n            { state.resultsReview.show && (\n              <DataReview\n                index={10}\n                title={'Flagged-Data Review'}\n                dataset_name={state.dataReview.dataset_name}\n                dataset_shape={state.dataReview.dataset_shape}\n                rows={state.resultsReview.rows}\n                columns={state.resultsReview.columns}\n                buttonText={'Download'}\n                actionType={'DOWNLOAD_RESULTS'}\n                dispatch={dispatch} />\n            )}\n            {/*\n            { state.selectedVarsDetails.varDetailsFinished && (\n                <FlaggingFinalReview\n                  variables={state.selectedVarsDetails.varNames}\n                  flaggingDetails={state.selectedVarsDetails.flaggingDetails} />\n            )}\n            */}\n          </Grid>\n        </Container>\n      </main>\n    </MainLayout>\n  );\n}\n\nexport {\n  FlaggingView\n}\n","/app/fits/src/components/DatadiffView.jsx",[],"/app/fits/src/components/Layout.jsx",[],"/app/fits/src/components/WorkbenchCard.jsx",["108","109"],"/app/fits/src/components/CSVVariableSelector.jsx",["110"],"import React, { useReducer } from \"react\";\nimport MaterialTable from 'material-table';\n\nimport { WorkbenchCard } from './WorkbenchCard';\nimport Button from \"@material-ui/core/Button\";\n\n\nfunction CSVVariableSelector({ columns, data, dispatch }) {\n  /*\n  let columnDefs = [\n    { title: 'Variables', field: 'variable_name' },\n    { title: 'Dimensions', field: 'dimensions' },\n    { title: 'Content Type', field: 'content_type' }\n  ];\n\n  let values= [\n    {\n        variable_name: 'datetime',\n        dimensions: '(1, 105192)',\n        content_type: 'String'\n    },\n    {\n        variable_name: 'WindDir',\n        dimensions: '(1, 105192)',\n        content_type: 'Integer'\n    },\n    {\n        variable_name: 'Windspeed_ms',\n        dimensions: '(1, 105192)',\n        content_type: 'Float'\n    },\n    {\n        variable_name: 'TEMP_F',\n        dimensions: '(1, 105192)',\n        content_type: 'Integer'\n    },\n    {\n        variable_name: 'DEWP_F',\n        dimensions: '(1, 105192)',\n        content_type: 'Integer'\n    },\n  ]\n  */\n  //onSelectionChange={(rows) => dispatch(handleChange(rows))}\n\n  let varNames = []\n\n  function addVariables(varNames) {\n    let showVars = new Array(varNames.length).fill(false);\n    if (showVars.length > 0) showVars[0] = true;\n    console.log(varNames);\n    console.log(showVars);\n    return {\n      type: 'ADD_VARS_TO_FLAG',\n      payload: {\n        varNames: varNames,\n        showVarCard: showVars\n      }\n    };\n  }\n\n  return (\n    <WorkbenchCard\n      key=\"card-2\"\n    >\n      <MaterialTable\n        title=\"Choose Variables to flag\"\n        columns={columns}\n        data={data}\n        options={{\n          selection: true\n        }}\n        onSelectionChange={(rows) => varNames = rows.map((row) => (row.varName))}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => { dispatch(addVariables(varNames)) }}\n      >\n        Next\n      </Button>\n    </WorkbenchCard>\n  )\n}\n\nexport {\n  CSVVariableSelector\n}\n","/app/fits/src/components/FileUploader.jsx",["111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126"],"import React, { useReducer } from \"react\";\nimport { Typography, Container, Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from '@material-ui/core/Card';\nimport TextField from \"@material-ui/core/TextField\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { useDropzone } from 'react-dropzone';\n\nimport { useStyles } from '../common/styles';\nimport { CSVVariableSelector } from './CSVVariableSelector';\nimport { VariableFlaggingDetails } from './VariableFlaggingDetails';\nimport { WorkbenchCard } from './WorkbenchCard';\n\nimport axios from 'axios';\n\nimport styled from 'styled-components';\n\nimport './css/components.scss';\n\n\nconst getColor = (props) => {\n  if (props.isDragAccept) {\n      return '#00e676';\n  }\n  if (props.isDragReject) {\n      return '#ff1744';\n  }\n  if (props.isDragActive) {\n      return '#2196f3';\n  }\n  return '#eeeeee';\n}\n\nconst FileUploaderContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-radius: 2px;\n  border-color: ${props => getColor(props)};\n  border-style: dashed;\n  background-color: #fafafa;\n  color: #bdbdbd;\n  outline: none;\n  transition: border .24s ease-in-out;\n`;\n\nconst init = (file_list) => {\n  return { uploaded: Array.from(file_list, x => false) }\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CHOSE_FILES_TO_UPLOAD':\n      return {\n        ...state,\n        files: action.payload,\n        uploaded: Array.from(action.payload, x => false)\n      };\n    case 'UPLOADED_FILE':\n      var new_uploaded = state.uploaded;\n      new_uploaded[action.payload] = true;\n      return {\n        ...state,\n        uploaded: new_uploaded\n      };\n    default:\n      return state;\n  }\n}\n\n\n\nfunction FileUploader({ parentDispatch, file_list }) {\n  const classes = useStyles();\n\n  const [state, dispatch] = useReducer(reducer, file_list, init);\n\n  function createData(id, datetime, WindDir, Windspeed_ms, TEMP_F, DEWP_F) {\n    return {id, datetime, WindDir, Windspeed_ms, TEMP_F, DEWP_F};\n  }\n\n  /*\n  function createData(id, datetime, WindDir, Windspeed_ms, TEMP_F, DEWP_F) {\n    return {id, datetime, WindDir, Windspeed_ms, TEMP_F, DEWP_F };\n  }\n\n  let dataReview = {\n    show: true,\n    columns: [\n      { field: 'id', headerName: 'ID', width: 70 },\n      { field: 'datetime', headerName: 'datetime', width: 130 },\n      { field: 'WindDir', headerName: 'WindDir', width: 90 },\n      { field: 'Windspeed_ms', headerName: 'Windspeed_ms', width: 90},\n      { field: 'TEMP_F', headerName: 'TEMP_F', width: 90 },\n      { field: 'DEWP_F', headerName: 'DEWP_F', width: 90 },\n    ],\n    rows: [\n      createData(1, '1/3/08 0:00', 330, 3.576, 81, 68),\n      createData(2, '1/3/08 1:00', 340, 1.341, 79, 68),\n      createData(3, '1/3/08 2:00', 'NA', 'NA', 'NA', 'NA'),\n      createData(4, '1/3/08 3:00', 'NA', 'NA', 'NA', 'NA'),\n      createData(5, '1/3/08 4:00', 'NA', 'NA', 'NA', 'NA'),\n    ],\n    datasetVarsTemplate: [\n      { title: 'Variables', field: 'varName' },\n      { title: 'Content Type', field: 'contentType' }\n    ],\n    datasetVars: [\n      {\n        varName: 'datetime',\n        contentType: 'String'\n      },\n      {\n        varName: 'WindDir',\n        contentType: 'Integer'\n      },\n      {\n        varName: 'Windspeed_ms',\n        contentType: 'Float'\n      },\n      {\n        varName: 'TEMP_F',\n        contentType: 'Integer'\n      },\n      {\n        varName: 'DEWP_F',\n        contentType: 'Integer'\n      },\n    ]\n  }\n  */\n\n  let dataReview = {\n    show: true,\n    datasetVarsTemplate: [\n      { title: 'Variables', field: 'varName' },\n      { title: 'Content Type', field: 'contentType' }\n    ]\n  }\n\n  const choseFilesToUpload = (files) => {\n    return {\n      type: 'CHOSE_FILES_TO_UPLOAD',\n      payload: files\n    };\n  }\n\n  const uploadedFile = (index) => {\n    return {\n      type: 'UPLOADED_FILE',\n      payload: index\n    };\n  }\n\n  const loadSample = (project_id, data) => {\n    return {\n      type: 'LOAD_SAMPLE',\n      payload: {\n        project_id: project_id,\n        data: data\n      }\n    };\n  }\n\n  const formatBytes = (bytes, decimals = 2) => {\n    if (bytes === 0) return '0 Bytes';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n\n  /*const onDrop = useCallback(acceptedFiles => {\n    // Do something with the files\n    dispatch(uploadFile());\n  }, []) */\n\n  const {\n    acceptedFiles,\n    fileRejections,\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({ \n    maxFiles: 0,\n    accept: '.csv',\n    onDropAccepted: (files) => {\n      parentDispatch(choseFilesToUpload(files));\n\n      console.log(\"Accepted Files\")\n\n      let upload_start = async () => {\n        let project_id_req = await axios.get('/flagging/id');\n\n        let project_id = project_id_req.data.project_id;\n        console.log(\"project_id\");\n        console.log(project_id);\n\n        for (var i = 0; i < files.length; i++) {\n          var dataset = files[i];\n          var formData = new FormData();\n          formData.append(\"upload_dataset\", dataset);\n\n          let req = axios.post('/flagging/upload/' + project_id,\n            formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            }\n          );\n\n          dispatch(uploadedFile(i));\n\n          var resData = null;\n          req.then((response) => {\n            //console.log(response.data);\n            //var resData = JSON.parse(JSON.stringify(response.data));\n            //var resData = JSON.parse(response.data);\n            if (resData === null) {\n              resData = response.data;\n              dataReview = {\n                ...dataReview,\n                ...resData.data,\n                dataset_name: dataset.name,\n                dataset_shape: [...resData.data_total_shape]\n              }\n\n              console.log(resData);\n              console.log(dataReview);\n\n              parentDispatch(\n                loadSample(\n                  resData.project_id,\n                  dataReview\n                )\n              );\n            }\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n        }\n      }\n      upload_start()\n      .then(res => console.log(res))\n      .catch((error) => {\n        console.log(error);\n      });\n    }\n  });\n\n  const styled_file_list = file_list.map((file, i) => (\n    <li key={file.path} className={classes.uploadFileList}>\n    <Grid container spacing={3}>\n      <Grid item xs={8}>\n        <div>{file.path}</div>\n      </Grid>\n      <Grid item xs={1}>\n        { state.uploaded[i] ? (\n            <div className={classes.uploadedBG}><span>Uploaded</span></div>\n          ) : (\n            <div className={\"uploading\"}>uploading<span>.</span><span>.</span><span>.</span></div>\n          )\n        }\n      </Grid>\n      <Grid item xs={2}>\n        <div style={{marginLeft: \"1em\"}}>{formatBytes(file.size)}</div>\n      </Grid>\n    </Grid>\n    </li>\n  ));\n\n  return (\n    <WorkbenchCard\n      key=\"card-initial\"\n      title=\"Upload Files for Flagging\"\n    >\n      <div className=\"container\">\n        <FileUploaderContainer {...getRootProps({isDragActive, isDragAccept, isDragReject})}>\n            <input {...getInputProps()} />\n            <p>Drag & drop files here, or click to select files</p>\n            <em>(Only .csv files are supported)</em>\n        </FileUploaderContainer>\n      </div>\n      { styled_file_list.length > 0 && (\n        <aside>\n          <h4>Files</h4>\n          <ul>{styled_file_list}</ul>\n        </aside>\n      )}\n    </WorkbenchCard>\n  )\n}\n\nexport {\n  FileUploader\n}\n","/app/fits/src/components/DataReview.jsx",[],"/app/fits/src/components/VariableFlaggingDetails.jsx",["127","128","129","130"],"import React, { useReducer } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { WorkbenchCard } from './WorkbenchCard';\nimport { useStyles } from '../common/styles';\n\nimport axios from 'axios';\n\nconst initialState = {\n  variable_type: 'numeric',\n  checkNull: true,\n  checkDuplicates: {\n    checked: true,\n    subsequentDisabled: false,\n    subsequentNum: 3\n  },\n  checkBadVals: {\n    checked: false,\n    disabled: false,\n    range: {\n      low: '',\n      high: ''\n    }\n  },\n  checkOutlierVals: {\n    checked: true,\n    disabled: false,\n    iqrCoef: 1.5\n  },\n  checkExtremeVals: {\n    checked: true,\n    disabled: false,\n    iqrCoef: 3\n  }\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'VARIABLE_TYPE_CHANGE':\n      let new_state = {\n        ...state,\n        variable_type: action.payload\n      };\n      if (action.payload == 'numeric') {\n        new_state = {\n          ...new_state,\n          checkDuplicates: {\n            ...new_state.checkDuplicates,\n            subsequentDisabled: false\n          },\n          checkBadVals: {\n            ...new_state.checkBadVals,\n            disabled: false\n          },\n          checkOutlierVals: {\n            ...new_state.checkOutlierVals,\n            disabled: false\n          },\n          checkExtremeVals: {\n            ...new_state.checkExtremeVals,\n            disabled: false\n          }\n        }\n      } else {\n        new_state = {\n          ...new_state,\n          checkDuplicates: {\n            ...new_state.checkDuplicates,\n            subsequentDisabled: true\n          },\n          checkBadVals: {\n            ...new_state.checkBadVals,\n            checked: false,\n            disabled: true\n          },\n          checkOutlierVals: {\n            ...new_state.checkOutlierVals,\n            checked: false,\n            disabled: true\n          },\n          checkExtremeVals: {\n            ...new_state.checkExtremeVals,\n            checked: false,\n            disabled: true\n          }\n        }\n      }\n\n      return new_state;\n    case 'CHECKBOX_CHANGE':\n      return {\n        ...state,\n        [action.payload.name]: action.payload.checked\n      };\n    case 'DUPLICATES_CHECKBOX_CHANGE':\n      return {\n        ...state,\n        checkDuplicates: {\n          ...state.checkDuplicates,\n          checked: action.payload\n        }\n      };\n    case 'SUBSEQUENT_NUM_CHANGE':\n      return {\n        ...state,\n        checkDuplicates: {\n          ...state.checkDuplicates,\n          subsequentNum: action.payload\n        }\n      };\n    case 'BAD_VALS_CHECKBOX_CHANGE':\n      return {\n        ...state,\n        checkBadVals: {\n          ...state.checkBadVals,\n          checked: action.payload\n        }\n      };\n    case 'BAD_VALS_FROM_INPUT_CHANGE':\n      return {\n        ...state,\n        checkBadVals: {\n          ...state.checkBadVals,\n          range: {\n            ...state.checkBadVals.range,\n            low: action.payload\n          }\n        }\n      };\n    case 'BAD_VALS_TO_INPUT_CHANGE':\n      return {\n        ...state,\n        checkBadVals: {\n          ...state.checkBadVals,\n          range: {\n            ...state.checkBadVals.range,\n            high: action.payload\n          }\n        }\n      };\n    case 'OUTLIER_CHECKBOX_CHANGE':\n      return {\n        ...state,\n        checkOutlierVals: {\n          ...state.checkOutlierVals,\n          checked: action.payload\n        }\n      };\n    case 'OUTLIER_IQR_VAL_CHANGE':\n      return {\n        ...state,\n        checkOutlierVals: {\n          ...state.checkOutlierVals,\n          iqrCoef: action.payload\n        }\n      };\n    case 'EXTREME_CHECKBOX_CHANGE':\n      return {\n        ...state,\n        checkExtremeVals: {\n          ...state.checkExtremeVals,\n          checked: action.payload\n        }\n      };\n    case 'EXTREME_IQR_VAL_CHANGE':\n      return {\n        ...state,\n        checkExtremeVals: {\n          ...state.checkExtremeVals,\n          iqrCoef: action.payload\n        }\n      };\n    default:\n      return state;\n  }\n}\n\nfunction VariableFlaggingDetails({\n    index, project_id, variable, isFinalVar, varNames,\n    flaggingDetails, dataset_name, parentDispatch }) {\n\n  const classes = useStyles();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const chooseVariableType = (event) => {\n    dispatch({\n      type: 'VARIABLE_TYPE_CHANGE',\n      payload: event.target.value\n    });\n  }\n\n  const basicCheckboxChange = (event) => {\n    dispatch({\n      type: 'CHECKBOX_CHANGE',\n      payload: {\n        name: event.target.name,\n        checked: event.target.checked\n      }\n    });\n  };\n\n  const duplicatesCheckboxChange = (event) => {\n    dispatch({\n      type: 'DUPLICATES_CHECKBOX_CHANGE',\n      payload: event.target.checked\n    });\n  };\n\n  const subsequentNumChange = (event) => {\n    dispatch({\n      type: 'SUBSEQUENT_NUM_CHANGE',\n      payload: event.target.value\n    });\n  };\n\n  const badValsCheckboxChange = (event) => {\n    dispatch({\n      type: 'BAD_VALS_CHECKBOX_CHANGE',\n      payload: event.target.checked\n    });\n  };\n\n  const badValsFromInputChange = (event) => {\n    dispatch({\n      type: 'BAD_VALS_FROM_INPUT_CHANGE',\n      payload: event.target.value\n    });\n  };\n\n  const badValsToInputChange = (event) => {\n    dispatch({\n      type: 'BAD_VALS_TO_INPUT_CHANGE',\n      payload: event.target.value\n    });\n  };\n\n  const outlierCheckboxChange = (event) => {\n    dispatch({\n      type: 'OUTLIER_CHECKBOX_CHANGE',\n      payload: event.target.checked\n    });\n  };\n\n  const outlierIqrValChange = (event) => {\n    dispatch({\n      type: 'OUTLIER_IQR_VAL_CHANGE',\n      payload: event.target.value\n    });\n  };\n\n  const extremeCheckboxChange = (event) => {\n    dispatch({\n      type: 'EXTREME_CHECKBOX_CHANGE',\n      payload: event.target.checked\n    });\n  };\n\n  const extremeIqrValChange = (event) => {\n    dispatch({\n      type: 'EXTREME_IQR_VAL_CHANGE',\n      payload: event.target.value\n    });\n  };\n\n  const moveToNextVar = () => {\n    parentDispatch({\n      type: \"MOVE_TO_NEXT_VAR\",\n      payload: {\n        variable: variable,\n        flaggingDetails: state\n      }\n    });\n  };\n\n  const runFlagging = () => {\n    console.log(flaggingDetails);\n    let varDetails = {\n      dataset_name: dataset_name,\n      varNames: [...varNames],\n      flaggingDetails: [\n        ...flaggingDetails,\n        state\n      ]\n    }\n    let req = axios.post('/flagging/run/' + project_id, varDetails)\n\n    parentDispatch({type: \"SENT_REQUEST\" });\n\n    req.then((response) => {\n      //console.log(response.data);\n      //var resData = JSON.parse(JSON.stringify(response.data));\n      //var resData = JSON.parse(response.data);\n      console.log(response.data);\n      parentDispatch({\n        type: \"RUN_FLAGGING\",\n        payload: {\n          variable: variable,\n          flaggingDetails: state,\n          response: response.data\n        }\n      });\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  };\n\n  return (\n    <WorkbenchCard\n      key={`card-${variable}`}\n      title={variable}\n    >\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormGroup>\n          <FormHelperText>Variable Type</FormHelperText>\n          <RadioGroup row aria-label=\"variable_type\" name=\"variable_type\"\n            defaultValue=\"numeric\" onChange={chooseVariableType}>\n            <FormControlLabel\n              value=\"numeric\"\n              control={<Radio />}\n              label=\"Numeric\"\n              labelPlacement=\"end\"\n            />\n            <FormControlLabel\n              value=\"string\"\n              control={<Radio />}\n              label=\"String\"\n              labelPlacement=\"end\"\n            />\n            <FormControlLabel\n              value=\"date\"\n              control={<Radio />}\n              label=\"Date\"\n              labelPlacement=\"end\"\n            />\n          </RadioGroup>\n        </FormGroup>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={state.checkNull}\n                onChange={basicCheckboxChange}\n                name=\"checkNull\" />\n            }\n            label=\"Check Null values\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={state.checkDuplicates.checked}\n                onChange={duplicatesCheckboxChange}\n                name=\"checkDuplicates\" />\n            }\n            label=\"Check Duplicate values\"\n          />\n          <FormGroup row className={classes.paddedFormControl}>\n            <FormControl>\n              <TextField\n                id=\"subsequent_duplicates_n\"\n                label=\"# of subsequent duplicates\"\n                disabled={(state.checkDuplicates.subsequentDisabled || !state.checkDuplicates.checked)}\n                variant={(state.checkDuplicates.subsequentDisabled || !state.checkDuplicates.checked) ? 'filled' : 'outlined'}\n                value={state.checkDuplicates.subsequentNum}\n                onChange={subsequentNumChange}\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\">n =</InputAdornment>,\n                }}\n              />\n            </FormControl>\n          </FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                disabled={state.checkBadVals.disabled}\n                checked={state.checkBadVals.checked}\n                onChange={badValsCheckboxChange}\n                name=\"checkBadVals\" />\n            }\n            label=\"Check Bad values\"\n          />\n          <FormGroup row className={classes.paddedFormControl}>\n            <FormControl>\n              <TextField\n                id=\"bad_vals_range_from\"\n                disabled={!state.checkBadVals.checked}\n                variant={state.checkBadVals.checked ? 'outlined' : 'filled'}\n                value={state.checkBadVals.range.low}\n                onChange={badValsFromInputChange}\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\">Range from</InputAdornment>,\n                }}\n              />\n              <TextField\n                id=\"bad_vals_range_to\"\n                disabled={!state.checkBadVals.checked}\n                variant={state.checkBadVals.checked ? 'outlined' : 'filled'}\n                value={state.checkBadVals.range.high}\n                onChange={badValsToInputChange}\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\">To</InputAdornment>,\n                }}\n              />\n            </FormControl>\n          </FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                disabled={state.checkOutlierVals.disabled}\n                checked={state.checkOutlierVals.checked}\n                onChange={outlierCheckboxChange} name=\"checkOutlierVals\" />\n            }\n            label=\"Check Outlier values\"\n          />\n          <FormGroup row className={classes.paddedFormControl}>\n            <FormControl>\n              <TextField\n                id=\"outlier_iqr_coef\"\n                disabled={!state.checkOutlierVals.checked}\n                variant={state.checkOutlierVals.checked ? 'outlined' : 'filled'}\n                value={state.checkOutlierVals.iqrCoef}\n                onChange={outlierIqrValChange}\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\">IQR Coefficient =</InputAdornment>,\n                }}\n              />\n            </FormControl>\n          </FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                disabled={state.checkExtremeVals.disabled}\n                checked={state.checkExtremeVals.checked}\n                onChange={extremeCheckboxChange}\n                name=\"checkExtremeVals\" />\n            }\n            label=\"Check Extreme values\"\n          />\n          <FormGroup row className={classes.paddedFormControl}>\n            <FormControl>\n              <TextField\n                id=\"extreme_iqr_coef\"\n                disabled={!state.checkExtremeVals.checked}\n                variant={state.checkExtremeVals.checked ? 'outlined' : 'filled'}\n                value={state.checkExtremeVals.iqrCoef}\n                onChange={extremeIqrValChange}\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\">IQR Coefficient =</InputAdornment>,\n                }}\n              />\n            </FormControl>\n          </FormGroup>\n        </FormGroup>\n      </FormControl>\n      { isFinalVar ? (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={runFlagging}\n          >\n            Run\n          </Button>\n        ) : (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={moveToNextVar}\n        >\n          Next\n        </Button>\n      )\n      }\n    </WorkbenchCard>\n  )\n}\n\nexport {\n  VariableFlaggingDetails\n}\n","/app/fits/src/components/Builder.jsx",["131","132","133","134","135"],"import React from \"react\";\n\nimport { useForm, useStep } from \"react-hooks-helper\";\nimport {\n    Button,\n    FormGroup,\n} from \"@material-ui/core\";\n\nimport { PrettyPrinter } from \"./PrettyPrinter\";\nimport { WorkbenchCard } from \"./Workbench\";\nimport { \n    SelectDir,\n    SelectSampleFile\n } from \"./selectors/File\";\nimport {\n    SelectFields,\n    SelectAnalysisParams\n} from \"./selectors/HDF5\";\n\nimport { SAMPLE } from \"../data\";\n\nconst STEPS = [\n    {\n        action: \"select\",\n        resource: \"dir\",\n        title: \"Select directories to compare\",\n        component: SelectDir\n    },\n    {\n        action: \"select\",\n        resource: \"sample_file\",\n        title: \"Select sample file\",\n        component: SelectSampleFile\n    },\n    {\n        action: \"select\",\n        resource: \"fields\",\n        title: \"Select HDF5 variables to compare\",\n        component: SelectFields\n    },\n    {\n        action: \"select\",\n        resource: \"analysis_params\",\n        title: \"Set analysis parameters\",\n        component: SelectAnalysisParams\n    }\n];\n\n\nexport function Builder ({ formData, setFormData }) {\n    const { index, step, navigation } = useStep({ initialStep: 0, steps: STEPS });\n    const { previous, next } = navigation;\n    const stepProps = { formData, setFormData };\n    const Selector = PrettyPrinter;\n    return (\n        <>\n            {STEPS\n            .slice(0, index + 1)\n            .map( (s, idx) => {\n                const Sel = s.component;\n                const title = s.title;\n                console.log('step:'); console.log(s);\n                return (\n                    <WorkbenchCard title={title} key={`card-${idx}`}>\n                        <Sel key={idx} {...stepProps}/>\n                    </WorkbenchCard>\n                )\n            })}\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={previous}\n            >\n                Prev\n            </Button>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={next}\n            >\n                Next\n            </Button>\n        </>\n    )\n}","/app/fits/src/components/Workbench.jsx",[],"/app/fits/src/components/Sidebar.jsx",[],"/app/fits/src/common/styles.jsx",[],"/app/fits/src/data.js",[],"/app/fits/src/components/PrettyPrinter.jsx",[],"/app/fits/src/components/selectors/File.jsx",[],"/app/fits/src/components/selectors/HDF5.jsx",[],"/app/fits/src/components/selectors/Base.jsx",[],"/app/fits/src/components/ProcessingCue.jsx",["136"],"import React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Grid, Divider } from \"@material-ui/core\";\nimport { WorkbenchCard } from './WorkbenchCard';\n\nimport { useStyles } from '../common/styles';\n\n\nfunction ProcessingCue({ title, file_list }) {\n  const classes = useStyles();\n\n  var styled_title = (\n    <span className=\"title_center\">\n      {title}\n      <Divider />\n    </span>\n  );\n\n  var styled_file_list = file_list.map((filename, i) => (\n    <li className={classes.uploadFileList}>{filename.path}</li>\n  ));\n\n  return (\n    <WorkbenchCard\n      key=\"card-in-progress\"\n      title={styled_title}\n      title_align=\"center\"\n    >\n      <Grid container spacing={1} style={{ height: 200, width: '100%' }}>\n        <Grid item xs={6} className=\"lds-ring-container-container\">\n          <Grid container class=\"lds-ring-container\">\n            <Grid item xs={12} style={{ paddingTop: \"13%\" }}>\n              <span style={{ color: '#5499C7', \"font-weight\": \"bold\" }}>PROCESSING</span>\n            </Grid>\n            <Grid item xs={12}>\n              <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={6} className=\"lds-ring-container-container\">\n          { styled_file_list.length > 0 && (\n            <aside style={{ paddingLeft: \"10%\" }}>\n              <h4>Files</h4>\n              <ul>{styled_file_list}</ul>\n            </aside>\n          )}\n        </Grid>\n      </Grid>\n    </WorkbenchCard>\n  );\n}\n\nexport {\n  ProcessingCue\n}\n",{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":27},{"ruleId":"141","severity":1,"message":"145","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":23},{"ruleId":"141","severity":1,"message":"146","line":6,"column":10,"nodeType":"143","messageId":"144","endLine":6,"endColumn":20},{"ruleId":"141","severity":1,"message":"147","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":14},{"ruleId":"141","severity":1,"message":"148","line":8,"column":8,"nodeType":"143","messageId":"144","endLine":8,"endColumn":17},{"ruleId":"141","severity":1,"message":"149","line":9,"column":8,"nodeType":"143","messageId":"144","endLine":9,"endColumn":13},{"ruleId":"141","severity":1,"message":"150","line":10,"column":8,"nodeType":"143","messageId":"144","endLine":10,"endColumn":17},{"ruleId":"141","severity":1,"message":"151","line":11,"column":8,"nodeType":"143","messageId":"144","endLine":11,"endColumn":17},{"ruleId":"141","severity":1,"message":"152","line":12,"column":8,"nodeType":"143","messageId":"144","endLine":12,"endColumn":17},{"ruleId":"141","severity":1,"message":"153","line":13,"column":8,"nodeType":"143","messageId":"144","endLine":13,"endColumn":16},{"ruleId":"141","severity":1,"message":"154","line":14,"column":8,"nodeType":"143","messageId":"144","endLine":14,"endColumn":23},{"ruleId":"141","severity":1,"message":"155","line":25,"column":10,"nodeType":"143","messageId":"144","endLine":25,"endColumn":20},{"ruleId":"141","severity":1,"message":"156","line":2,"column":23,"nodeType":"143","messageId":"144","endLine":2,"endColumn":27},{"ruleId":"141","severity":1,"message":"157","line":2,"column":29,"nodeType":"143","messageId":"144","endLine":2,"endColumn":36},{"ruleId":"141","severity":1,"message":"142","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":27},{"ruleId":"141","severity":1,"message":"146","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":20},{"ruleId":"141","severity":1,"message":"158","line":2,"column":22,"nodeType":"143","messageId":"144","endLine":2,"endColumn":31},{"ruleId":"141","severity":1,"message":"147","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":14},{"ruleId":"141","severity":1,"message":"156","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":12},{"ruleId":"141","severity":1,"message":"148","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":17},{"ruleId":"141","severity":1,"message":"149","line":6,"column":8,"nodeType":"143","messageId":"144","endLine":6,"endColumn":13},{"ruleId":"141","severity":1,"message":"150","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":17},{"ruleId":"141","severity":1,"message":"151","line":8,"column":8,"nodeType":"143","messageId":"144","endLine":8,"endColumn":17},{"ruleId":"141","severity":1,"message":"152","line":9,"column":8,"nodeType":"143","messageId":"144","endLine":9,"endColumn":17},{"ruleId":"141","severity":1,"message":"153","line":10,"column":8,"nodeType":"143","messageId":"144","endLine":10,"endColumn":16},{"ruleId":"141","severity":1,"message":"154","line":11,"column":8,"nodeType":"143","messageId":"144","endLine":11,"endColumn":23},{"ruleId":"141","severity":1,"message":"159","line":15,"column":10,"nodeType":"143","messageId":"144","endLine":15,"endColumn":29},{"ruleId":"141","severity":1,"message":"160","line":16,"column":10,"nodeType":"143","messageId":"144","endLine":16,"endColumn":33},{"ruleId":"141","severity":1,"message":"155","line":87,"column":12,"nodeType":"143","messageId":"144","endLine":87,"endColumn":22},{"ruleId":"141","severity":1,"message":"161","line":193,"column":5,"nodeType":"143","messageId":"144","endLine":193,"endColumn":19},{"ruleId":"162","severity":1,"message":"163","line":230,"column":20,"nodeType":"164","messageId":"165","endLine":253,"endColumn":12},{"ruleId":"141","severity":1,"message":"146","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":20},{"ruleId":"141","severity":1,"message":"166","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":13},{"ruleId":"141","severity":1,"message":"167","line":12,"column":8,"nodeType":"143","messageId":"144","endLine":12,"endColumn":17},{"ruleId":"168","severity":1,"message":"169","line":56,"column":26,"nodeType":"170","messageId":"171","endLine":56,"endColumn":28},{"ruleId":"141","severity":1,"message":"172","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":17},{"ruleId":"141","severity":1,"message":"173","line":6,"column":5,"nodeType":"143","messageId":"144","endLine":6,"endColumn":14},{"ruleId":"141","severity":1,"message":"174","line":20,"column":10,"nodeType":"143","messageId":"144","endLine":20,"endColumn":16},{"ruleId":"141","severity":1,"message":"175","line":51,"column":20,"nodeType":"143","messageId":"144","endLine":51,"endColumn":24},{"ruleId":"141","severity":1,"message":"176","line":54,"column":11,"nodeType":"143","messageId":"144","endLine":54,"endColumn":19},{"ruleId":"141","severity":1,"message":"177","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":18},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'WorkbenchCard' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'CloudUploadIcon' is defined but never used.","'createData' is defined but never used.","'Card' is defined but never used.","'Divider' is defined but never used.","'Container' is defined but never used.","'CSVVariableSelector' is defined but never used.","'VariableFlaggingDetails' is defined but never used.","'fileRejections' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'resData', 'resData', 'dataReview', 'dataReview', 'resData', 'dataset', 'resData', 'resData', 'dataReview', 'resData', 'dataReview'.","ArrowFunctionExpression","unsafeRefs","'Input' is defined but never used.","'FormLabel' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useForm' is defined but never used.","'FormGroup' is defined but never used.","'SAMPLE' is defined but never used.","'step' is assigned a value but never used.","'Selector' is assigned a value but never used.","'DataGrid' is defined but never used.","no-global-assign","no-unsafe-negation"]